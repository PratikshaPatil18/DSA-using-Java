import java.util.*;

class Solution {
    public ArrayList<Integer> spirallyTraverse(int[][] mat) {
        int n = mat.length;       // number of rows
        int m = mat[0].length;    // number of columns

        int top = 0, bottom = n - 1;
        int left = 0, right = m - 1;

        ArrayList<Integer> ans = new ArrayList<>();

        while (top <= bottom && left <= right) {
            // 1️⃣ Traverse top row (left → right)
            for (int i = left; i <= right; i++) {
                ans.add(mat[top][i]);
            }
            top++;

            // 2️⃣ Traverse right column (top → bottom)
            for (int i = top; i <= bottom; i++) {
                ans.add(mat[i][right]);
            }
            right--;

            // 3️⃣ Traverse bottom row (right → left)
            if (top <= bottom) {
                for (int i = right; i >= left; i--) {
                    ans.add(mat[bottom][i]);
                }
                bottom--;
            }

            // 4️⃣ Traverse left column (bottom → top)
            if (left <= right) {
                for (int i = bottom; i >= top; i--) {
                    ans.add(mat[i][left]);
                }
                left++;
            }
        }

        return ans;
    }

    // For testing
    public static void main(String[] args) {
        Solution sol = new Solution();
        int[][] matrix = {
            {1, 2, 3, 4},
            {5, 6, 7, 8},
            {9, 10, 11, 12},
            {13, 14, 15, 16}
        };

        System.out.println(sol.spirallyTraverse(matrix));
        // Output: [1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10]
    }
}
