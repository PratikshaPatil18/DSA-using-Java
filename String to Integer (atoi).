class Solution {
    public int myAtoi(String s) {

        if( s == null || s.length() < 0) {
            return 0;
        }
        int i =0  , n= s.length();

      //1 .space
        while( i < n && s.charAt(i) == ' '){
            i++;
        }

        //had only space 

        if( i == n ) return 0;

        // 2.sign


        int sign = 1;
        if( s.charAt(i) == '+' || s.charAt(i) == '-'){
            sign = (s.charAt(i) == '-') ? -1 : 1;
            i++;
        }


        //3.spase digit
        int result =0 ;
        while( i < n && Character.isDigit (s.charAt(i))){
            int digit = s.charAt(i) - '0';
        
        
     // 4. Check overflow before multiplying/adding
            if (result > (Integer.MAX_VALUE - digit) / 10) {
                return (sign == 1) ? Integer.MAX_VALUE : Integer.MIN_VALUE;
            }

            result = result * 10 + digit;
            i++;
        }

        // 5. Apply sign
        return result * sign;
        
    }
}
